#!/bin/bash

echo "ЁЯЪА рж╕ржорж┐рждрж┐ ржорзНржпрж╛ржирзЗржЬрж╛рж░ APK рждрзИрж░рж┐ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ..."

# Check if node_modules exists
if [ ! -d "node_modules" ]; then
    echo "ЁЯУж Installing dependencies..."
    npm install
fi

# Build web app
echo "ЁЯФи Web app build ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ..."
npm run build

# Check if capacitor is initialized
if [ ! -f "capacitor.config.ts" ]; then
    echo "тЪб Capacitor initialize ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ..."
    npx cap init "рж╕ржорж┐рждрж┐ я┐╜я┐╜рзНржпрж╛ржирзЗржЬрж╛рж░" "com.somitimanager.app"
fi

# Add android platform if not exists
if [ ! -d "android" ]; then
    echo "ЁЯУ▒ Android platform ржпрзЛржЧ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ..."
    npx cap add android
fi

# Copy web assets
echo "ЁЯУЛ Web assets copy ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ..."
npx cap copy android

# Build debug APK
echo "ЁЯФз Debug APK build ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ..."
cd android
chmod +x ./gradlew
./gradlew assembleDebug

echo ""
echo "тЬЕ APK рждрзИрж░рж┐ рж╕ржорзНржкржирзНржи!"
echo "ЁЯУН APK Location: android/app/build/outputs/apk/debug/app-debug.apk"
echo ""
echo "ЁЯУ▒ ржПржЦржи ржПржЗ APK ржлрж╛ржЗрж▓ржЯрж┐ ржЖржкржирж╛рж░ ржлрзЛржирзЗ install ржХрж░рзБржи!"
echo "ЁЯФз Production APK ржПрж░ ржЬржирзНржп: npm run apk:release"
